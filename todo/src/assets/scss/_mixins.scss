@charset "utf-8";

// [TODO] 사용 변수 정리, 주석 정리 필요.

@mixin box-shadow($shadows...) {
    -moz-box-shadow: $shadows;
    -webkit-box-shadow: $shadows;
    box-shadow: $shadows;
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

@mixin fontHide() {
font: 0/0 all;
color: transparent;
}

@mixin itemSize($w, $h) {
width: $w;
height: $h;
}
// :::::::::::::::::::::::::
// @ clearfix ::
// :::::::::::::::::::::::::
@mixin clearfix {
&::after {
    content: "";
    display: block;
    clear: both;
}
}
// :::::::::::::::::::::::::
// @ Pseudo class base ::
// :::::::::::::::::::::::::
@mixin pseudoBase($pos: absolute, $display: block) {
content: "";
display: $display;
position: $pos;
}

// :::::::::::::::::::::::::
// @ aBlock ::
// :::::::::::::::::::::::::
@mixin aBlock($block) {
display: $block;
width: 100%;
height: 100%;
}

// :::::::::::::::::::::::::
// @ backgroundImage ::
// [ left | center | right | top | bottom | <length-percentage> ]
// [ contain | cover | auto | <length> | <percentage> ]
// :::::::::::::::::::::::::
@mixin bgImg($p, $s) {
background-position: $p;
background-size: $s;
background-repeat: no-repeat;
}
@mixin bgSprite($p) {
background-position: $p;
}
@mixin bgItemSize($x, $y) {
width: $x;
height: $y;
background-repeat: no-repeat;
}
// :::::::::::::::::::::::::
// @ flex :: set prop
// :::::::::::::::::::::::::
// Flex display
// flex | inline-flex,
// flex-start | flex-end | center | space-between | space-around,
// flex-start | flex-end | center | baseline | stretch
@mixin displayFlex($display: flex, $justify: center, $align: center) {
@if $display==flex {
    @include flexbox();
} @else {
    @include inline-flex();
}
@include justify-content($justify);
@include align-items($align);
}

// :::::::::::::::::::::::::
// @ flex :: Individual prop
// :::::::::::::::::::::::::
// Flexbox display
@mixin flexbox() {
display: -webkit-box;
display: -moz-box;
display: -ms-flexbox;
display: -webkit-flex;
display: flex;
}

@mixin inline-flex() {
display: -webkit-inline-box;
display: -webkit-inline-flex;
display: -moz-inline-flex;
display: -ms-inline-flexbox;
display: inline-flex;
}

// flex
// <positive-number>, initial, auto, or none
@mixin flex($values) {
-webkit-box-flex: $values;
-moz-box-flex: $values;
-webkit-flex: $values;
-ms-flex: $values;
flex: $values;
}

// Flex Flow Direction
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction: column) {
-webkit-flex-direction: $direction;
-moz-flex-direction: $direction;
-ms-flex-direction: $direction;
flex-direction: $direction;
}

// Flex Line Wrapping
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap: wrap) {
-webkit-flex-wrap: $wrap;
-moz-flex-wrap: $wrap;
-ms-flex-wrap: $wrap;
flex-wrap: $wrap;
}

// Flex Direction and Wrap
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
-webkit-flex-flow: $flow;
-moz-flex-flow: $flow;
-ms-flex-flow: $flow;
flex-flow: $flow;
}

// Display Order
// <integer>
@mixin order($val) {
-webkit-box-ordinal-group: $val;
-moz-box-ordinal-group: $val;
-ms-flex-order: $val;
-webkit-order: $val;
order: $val;
}

// Flex grow factor
// <number>
@mixin flex-grow($grow) {
-webkit-flex-grow: $grow;
-moz-flex-grow: $grow;
-ms-flex-grow: $grow;
flex-grow: $grow;
}

// Flex shrink
// <number>
@mixin flex-shrink($shrink) {
-webkit-flex-shrink: $shrink;
-moz-flex-shrink: $shrink;
-ms-flex-shrink: $shrink;
flex-shrink: $shrink;
}

// Flex basis
// <width>
@mixin flex-basis($width) {
-webkit-flex-basis: $width;
-moz-flex-basis: $width;
-ms-flex-basis: $width;
flex-basis: $width;
}

// Axis Alignment
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify: center) {
-webkit-justify-content: $justify;
-moz-justify-content: $justify;
-ms-justify-content: $justify;
justify-content: $justify;
-ms-flex-pack: $justify;
}

// Packing Flex Lines
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align: center) {
-webkit-align-content: $align;
-moz-align-content: $align;
-ms-align-content: $align;
align-content: $align;
}

// Cross-axis Alignment
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align: center) {
-webkit-align-items: $align;
-moz-align-items: $align;
-ms-align-items: $align;
align-items: $align;
}

// Cross-axis Alignment
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
-webkit-align-self: $align;
-moz-align-self: $align;
-ms-align-self: $align;
align-self: $align;
}